<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>0.环境初始化</title>
    <link href="/2022/09/19/mini-vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%8E%AF%E5%A2%83%E5%88%9D%E5%A7%8B%E5%8C%96/"/>
    <url>/2022/09/19/mini-vue%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E7%8E%AF%E5%A2%83%E5%88%9D%E5%A7%8B%E5%8C%96/</url>
    
    <content type="html"><![CDATA[<h1 id="初始化环境"><a href="#初始化环境" class="headerlink" title="初始化环境"></a>初始化环境</h1><p>本文，主要是对于开发与测试环境的初始化。在本项目中，将采用 <code>jest</code> 作为功能测试框架。使用 <code>typescript</code> 作为主要开发语言。</p><p>请按照以下步骤初始化环境：</p><h2 id="1-初始化仓库"><a href="#1-初始化仓库" class="headerlink" title="1. 初始化仓库"></a>1. 初始化仓库</h2><p>为了更好管理仓库的版本，请使用 Git 作为版本管理工具，请确保你的仓库中已初始化 Git</p><p>请确保你的仓库已经初始化 <code>package.json</code></p><p>请确保该仓库使用的包管理工具是 <code>pnpm</code></p><h2 id="2-安装必要的包"><a href="#2-安装必要的包" class="headerlink" title="2. 安装必要的包"></a>2. 安装必要的包</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 安装 typescript</span><br>pnpm add -D typescript<br><span class="hljs-comment"># 配置 tsconfig.json</span><br>npx tsc --init<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 安装 ts-jest</span><br>pnpm add -D jest ts-jest<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 安装所需依赖</span><br>pnpm add -D @rollup/plugin-commonjs @rollup/plugin-node-resolve @rollup/plugin-replace @rollup/plugin-typescript @types/jest rollup rollup-plugin-sourcemaps tslib<br></code></pre></td></tr></table></figure><h2 id="3-配置-npm-script"><a href="#3-配置-npm-script" class="headerlink" title="3. 配置 npm script"></a>3. 配置 npm script</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;scripts&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;test&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;jest&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>可以通过 <code>pnpm test</code> 来运行所有的单元测试，也可以通过 VS Code 插件 <code>Jest Runner</code> 来对某一个参数单独 Debug 或 Run。</p><h2 id="4-配置-jest"><a href="#4-配置-jest" class="headerlink" title="4. 配置 jest"></a>4. 配置 jest</h2><p>1.为了让 jest 支持 ESM 我们需要如下配置</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">/** <span class="hljs-doctag">@type</span> &#123;<span class="hljs-type">import(&#x27;ts-jest/dist/types&#x27;).InitialOptionsTsJest</span>&#125; */</span><br><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = &#123;<br>  <span class="hljs-attr">preset</span>: <span class="hljs-string">&quot;ts-jest&quot;</span>,<br>  <span class="hljs-attr">testEnvironment</span>: <span class="hljs-string">&quot;node&quot;</span>,<br>  <span class="hljs-attr">watchPathIgnorePatterns</span>: [<span class="hljs-string">&quot;/node_modules/&quot;</span>, <span class="hljs-string">&quot;/dist/&quot;</span>, <span class="hljs-string">&quot;/.git/&quot;</span>],<br>  <span class="hljs-attr">moduleFileExtensions</span>: [<span class="hljs-string">&quot;ts&quot;</span>, <span class="hljs-string">&quot;tsx&quot;</span>, <span class="hljs-string">&quot;js&quot;</span>, <span class="hljs-string">&quot;json&quot;</span>],<br>  <span class="hljs-attr">moduleNameMapper</span>: &#123;<br>    <span class="hljs-string">&quot;^@mini-vue/(.*?)$&quot;</span>: <span class="hljs-string">&quot;&lt;rootDir&gt;/packages/$1/src&quot;</span>,<br>  &#125;,<br>  <span class="hljs-attr">rootDir</span>: __dirname,<br>  <span class="hljs-attr">testMatch</span>: [<span class="hljs-string">&quot;&lt;rootDir&gt;/packages/**/__tests__/**/*spec.[jt]s?(x)&quot;</span>],<br>  <span class="hljs-attr">testPathIgnorePatterns</span>: [<span class="hljs-string">&quot;/node_modules/&quot;</span>],<br>&#125;;<br></code></pre></td></tr></table></figure><h1 id="5-配置-tsconfig"><a href="#5-配置-tsconfig" class="headerlink" title="5.配置 tsconfig"></a>5.配置 tsconfig</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs js">&#123;<br>  <span class="hljs-string">&quot;compilerOptions&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;baseUrl&quot;</span>: <span class="hljs-string">&quot;.&quot;</span>,<br>    <span class="hljs-string">&quot;strict&quot;</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-string">&quot;rootDir&quot;</span>: <span class="hljs-string">&quot;.&quot;</span>,<br>    <span class="hljs-string">&quot;moduleResolution&quot;</span>: <span class="hljs-string">&quot;node&quot;</span>,<br>    <span class="hljs-string">&quot;esModuleInterop&quot;</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-string">&quot;target&quot;</span>: <span class="hljs-string">&quot;es2016&quot;</span>,<br>    <span class="hljs-string">&quot;module&quot;</span>: <span class="hljs-string">&quot;esnext&quot;</span>,<br>    <span class="hljs-string">&quot;noImplicitAny&quot;</span>: <span class="hljs-literal">false</span>,<br>    <span class="hljs-string">&quot;removeComments&quot;</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-string">&quot;preserveConstEnums&quot;</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-string">&quot;sourceMap&quot;</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-string">&quot;downlevelIteration&quot;</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-string">&quot;lib&quot;</span>: [<span class="hljs-string">&quot;esnext&quot;</span>, <span class="hljs-string">&quot;DOM&quot;</span>],<br>    <span class="hljs-string">&quot;types&quot;</span>: [<span class="hljs-string">&quot;jest&quot;</span>],<br>    <span class="hljs-string">&quot;paths&quot;</span>: &#123;<br>      <span class="hljs-string">&quot;@mini-vue/*&quot;</span>: [<span class="hljs-string">&quot;packages/*/src&quot;</span>]<br>    &#125;<br>  &#125;,<br>  <span class="hljs-string">&quot;include&quot;</span>: [<span class="hljs-string">&quot;packages/*/src&quot;</span>, <span class="hljs-string">&quot;packages/*/__tests__&quot;</span>]<br>&#125;<br></code></pre></td></tr></table></figure><p>以上，项目初始化配置已经配完。</p>]]></content>
    
    
    <categories>
      
      <category>Diary</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Mini-vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ES6 Study</title>
    <link href="/2022/03/02/ES6-Study/ES6-Study/"/>
    <url>/2022/03/02/ES6-Study/ES6-Study/</url>
    
    <content type="html"><![CDATA[<h1 id="ES6的相关学习"><a href="#ES6的相关学习" class="headerlink" title="ES6的相关学习"></a>ES6的相关学习</h1><h3 id="asycn-await-方法"><a href="#asycn-await-方法" class="headerlink" title="asycn/await 方法"></a>asycn/await 方法</h3><blockquote><p>使用同步的方法请求异步接口</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> <span class="hljs-title function_">requestLogin</span> = (<span class="hljs-params">params</span>) =&gt;&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function"><span class="hljs-params">resolve</span> =&gt;</span>&#123;<br>        <span class="hljs-title function_">resolve</span>(<span class="hljs-string">`<span class="hljs-subst">$&#123;params.username&#125;</span>欢迎你`</span>)<br>    &#125;)<br>&#125;<br><span class="hljs-keyword">const</span> <span class="hljs-title function_">requestUserInfo</span> = (<span class="hljs-params">params</span>) =&gt;&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(<span class="hljs-function"><span class="hljs-params">resolve</span> =&gt;</span>&#123;<br>        <span class="hljs-title function_">resolve</span>(<span class="hljs-string">`<span class="hljs-subst">$&#123;params&#125;</span>欢迎你`</span>)<br>    &#125;)<br>&#125;<br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">handleLogin</span> = <span class="hljs-keyword">async</span>(<span class="hljs-params"></span>) =&gt;&#123;<br>    <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title function_">requestLogin</span>(&#123;<br>        <span class="hljs-attr">username</span>:<span class="hljs-string">&#x27;username&#x27;</span>,<br>        <span class="hljs-attr">password</span>:<span class="hljs-string">&#x27;123456&#x27;</span><br>    &#125;)<br>    <span class="hljs-keyword">const</span> info = <span class="hljs-keyword">await</span> <span class="hljs-title function_">requestUserInfo</span>(res)<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>async默认返回一个Promise</p></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>Study</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Power Apps使用感想</title>
    <link href="/2021/12/13/Power-Apps/Power-Apps/"/>
    <url>/2021/12/13/Power-Apps/Power-Apps/</url>
    
    <content type="html"><![CDATA[<h1 id="Power-Apps-使用感想"><a href="#Power-Apps-使用感想" class="headerlink" title="Power Apps 使用感想"></a>Power Apps 使用感想</h1><p>2021年4月因为工作变动，开始使用微软推出的一个低代码开发工具Power Apps,这里分析一下它的优缺点以及我的使用心得。</p><h3 id="什么是Power-Platform？"><a href="#什么是Power-Platform？" class="headerlink" title="什么是Power Platform？"></a>什么是Power Platform？</h3><p>Power Platform由Power BI， PowerApps， Power Automate 与 Power Virtual Agents组成。微软一直在不断地将其作为一个整体来推广。这几项服务为管理我们的数字世界提供了工具，在这个世界中，数据为王，是任何企业流程的基础。它们的应用如下：</p><ol><li>您可以使用Power BI显示和分析数据。</li><li>您可以使用PowerApps操作和修改数据。</li><li>您可以使用Power Automate自动执行数据。</li></ol><h3 id="如何使用Microsoft-PowerApps构建应用程序"><a href="#如何使用Microsoft-PowerApps构建应用程序" class="headerlink" title="如何使用Microsoft PowerApps构建应用程序"></a>如何使用Microsoft PowerApps构建应用程序</h3><p>您可以在PowerApps中使用四种工具或环境，它们各自具有自己的功能和角色。</p><p>PowerApps网站</p><p>该网站是您开始PowerApps服务之旅的地方。在这里，您可以创建新应用并管理现有应用。<br><img src="./Power_Apps.jpg" alt="Power_Apps"></p><h3 id="选择PowerApps应用程序类型"><a href="#选择PowerApps应用程序类型" class="headerlink" title="选择PowerApps应用程序类型"></a>选择PowerApps应用程序类型</h3><p>PowerApps创建两种主要类型的应用程序：</p><ol><li>画布应用(Canvas)</li><li>模型驱动应用(Model-driven)</li></ol><p>画布应用（Canvas）应用程序使您可以通过将控件和字段定位在“完美像素”pixel-perfect”的用户体验中来自由，轻松地组织界面。这里的主要重点是将您的业务知识和创造力带入应用程序的设计中。 Canvas应用程序的目标是轻量级应用程序，这意味着我们甚至可以在几分钟内进行设计和使用。</p><p>模型驱动的应用程序建立在通用数据服务（新名字为：Microsoft Dataflex Pro）的基础上，该通用数据服务用于帮助快速构建表单，流程和业务规则。他们适合用于【长时间使用】（一次多个小时）的非轻便应用程序。</p><p>使用Model-driven App时，会为您确定大量的布局，并且大部分由您添加到应用程序中的Component指定。相比之下，设计人员可以完全控制canvas应用程序开发中的应用程序布局。</p><p>Power Apps 数据源这部分有很多的坑，我们放到之后来详细解释。</p><p>相关链接：</p><ol><li><a href="https://powerbi.microsoft.com/">Power BI</a></li><li><a href="https://powerapps.microsoft.com/en-us/">Power Apps</a></li><li><a href="https://powerautomate.microsoft.com/zh-cn/">Power Automate</a></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>Study notes</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
